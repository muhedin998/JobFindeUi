{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthenticateService {\n  constructor(http) {\n    this.http = http;\n    this.BASE_URL = 'http://localhost:8080';\n  }\n\n  authenticateUser(user) {\n    this.http.post(this.BASE_URL + '/api/v1/auth/authenticate', user).pipe().subscribe(data => console.log(data), err => console.log(err));\n  }\n\n}\n\nAuthenticateService.ɵfac = function AuthenticateService_Factory(t) {\n  return new (t || AuthenticateService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nAuthenticateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticateService,\n  factory: AuthenticateService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAAQA,eAAR,QAAyC,MAAzC;;;AAMA,OAAM,MAAOC,mBAAP,CAA0B;EAI9BC,YAAoBC,IAApB,EAAoC;IAAhB;IAHpB,gBAAmB,uBAAnB;EAGyC;;EAEzCC,gBAAgB,CAACC,IAAD,EAAmB;IACjC,KAAKF,IAAL,CAAUG,IAAV,CAAkD,KAAKC,QAAL,GAAgB,2BAAlE,EAA+FF,IAA/F,EAAqGG,IAArG,GAEEC,SAFF,CAGIC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAHZ,EAIKG,GAAD,IAASF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAJb;EAMD;;AAb6B;;;mBAAnBZ,qBAAmBa;AAAA;;;SAAnBb;EAAmBc,SAAnBd,mBAAmB;EAAAe,YAFlB","names":["BehaviorSubject","AuthenticateService","constructor","http","authenticateUser","user","post","BASE_URL","pipe","subscribe","data","console","log","err","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ALIC\\Desktop\\New folder (2)\\JobFindeUi\\src\\app\\services\\authenticate.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Authenticate} from \"../models/authenticate.model\";\nimport * as http from \"http\";\nimport {BehaviorSubject, switchMap} from \"rxjs\";\nimport {UserModel} from \"../models/user.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticateService {\n  BASE_URL: string = 'http://localhost:8080';\n  currentUser$: BehaviorSubject<UserModel> | null | undefined;\n\n  constructor(private http: HttpClient) { }\n\n  authenticateUser(user: Authenticate) {\n    this.http.post<{ user: UserModel, token: string}>(this.BASE_URL + '/api/v1/auth/authenticate', user).pipe(\n        // switchMap(async (data) => this.currentUser$?.next(data.user))\n    ).subscribe(\n        data => console.log(data),\n        (err) => console.log(err)\n    )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}